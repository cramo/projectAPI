<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="5ab29d1d-f428-42d9-be35-a1c29f2bbcdf" created="2.4.0" activeEnvironment="Default environment" name="LibreplanAPI" resourceRoot="" updated="2.4.0 2018-06-08T12:50:23Z" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="9911906f-0f13-4b62-a881-0882bafa4b12" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8180" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:8180</con:endpoint></con:endpoints><con:resource name="Calendarexceptiontypes" path="/libreplan/ws/rest/calendarexceptiontypes/" id="41c98300-21e6-46c2-a597-9bd3fb718569"><con:settings/><con:parameters><con:parameter><con:name>_wadl</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>_type</con:name><con:value>xml</con:value><con:style>QUERY</con:style><con:default>xml</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Calendarexceptiontypes" id="2d8b4293-e0dd-48a8-8242-5851df307f0a" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:rest="http://rest.ws.libreplan.org">rest:calendar-exception-type-list</con:element></con:representation><con:request name="Request 1" id="1fcffb78-576d-4606-b276-33b8f5945bf6" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://localhost:8180</con:endpoint><con:request/><con:originalUri>http://localhost/libreplan/common/layout/login.zul;jsessionid=8154EFB09AFD251DAA88F9306431C853</con:originalUri><con:credentials><con:username>wsreader</con:username><con:password>wsreader</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="_wadl" value=""/>
  <con:entry key="_type" value="xml"/>
</con:parameters><con:parameterOrder><con:entry>_wadl</con:entry><con:entry>_type</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="e8b3b602-f663-4ff8-a228-8a57e583e446" name="http://localhost:8180 TestSuite"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="c4b07ff6-8dca-4d1f-a42f-3a9a849371ad" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="http://localhost:8180 TestCase 1" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Calendarexceptiontypes-Request 1" id="3cca950a-5f95-42a7-a38f-6b38c0f7f533"><con:settings/><con:config service="http://localhost:8180" resourcePath="/libreplan/ws/rest/calendarexceptiontypes/" methodName="Calendarexceptiontypes" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Calendarexceptiontypes-Request 1" id="1fcffb78-576d-4606-b276-33b8f5945bf6" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://localhost:8180</con:endpoint><con:request/><con:originalUri>http://localhost/libreplan/common/layout/login.zul;jsessionid=8154EFB09AFD251DAA88F9306431C853</con:originalUri><con:credentials><con:username>wsreader</con:username><con:password>wsreader</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="_wadl" value=""/>
  <con:entry key="_type" value="xml"/>
</con:parameters><con:parameterOrder><con:entry>_wadl</con:entry><con:entry>_type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/><con:parameters/></con:reporting><con:reporting/><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository><con:basicAuthEntry><con:name>wsreader</con:name><con:type>Basic</con:type><con:username>wsreader</con:username><con:password>wsreader</con:password><con:preemptive>true</con:preemptive></con:basicAuthEntry></con:authRepository><con:tags/></con:soapui-project>